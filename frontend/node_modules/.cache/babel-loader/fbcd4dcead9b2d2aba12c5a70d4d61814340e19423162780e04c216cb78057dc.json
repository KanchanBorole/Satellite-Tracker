{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MissionSkyTracker\\\\MissionSkyTracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport SatelliteHistory from './components/SatelliteHistory';\nimport LiveVideo from './components/LiveVideo';\n\n/**\n * Main App component for Mission Board Dashboard\n * Handles routing and global state management\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('home');\n  const [satellites, setSatellites] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // API configuration\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n  /**\n   * Fetch satellite data from backend API\n   */\n  const fetchSatellites = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/satellites`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.satellites && Array.isArray(data.satellites)) {\n        setSatellites(data.satellites);\n      } else {\n        throw new Error('Invalid data format received from server');\n      }\n    } catch (err) {\n      console.error('Failed to fetch satellites:', err);\n      setError(`Failed to load satellite data: ${err.message}`);\n      setSatellites([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load satellites on component mount\n  useEffect(() => {\n    fetchSatellites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Handle navigation between views\n   */\n  const handleNavigation = view => {\n    setCurrentView(view);\n\n    // Refresh data when navigating to dashboard or history\n    if (view === 'dashboard' || view === 'history') {\n      fetchSatellites();\n    }\n  };\n\n  /**\n   * Render current view based on navigation state\n   */\n  const renderCurrentView = () => {\n    const commonProps = {\n      satellites,\n      loading,\n      error,\n      onRefresh: fetchSatellites\n    };\n    switch (currentView) {\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(Home, {\n          ...commonProps,\n          onNavigate: handleNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 24\n        }, this);\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 24\n        }, this);\n      case 'history':\n        return /*#__PURE__*/_jsxDEV(SatelliteHistory, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }, this);\n      case 'videos':\n        return /*#__PURE__*/_jsxDEV(LiveVideo, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Home, {\n          ...commonProps,\n          onNavigate: handleNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentView: currentView,\n      onNavigate: handleNavigation,\n      satelliteCount: satellites.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: renderCurrentView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed bottom-0 end-0 p-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast show\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-header bg-danger text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-triangle me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close btn-close-white\",\n            onClick: () => setError(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-body bg-dark text-white\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cLx/u+bHFSAGMxnFJul4DcRheaw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Home","Dashboard","SatelliteHistory","LiveVideo","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","satellites","setSatellites","loading","setLoading","error","setError","API_BASE_URL","process","env","REACT_APP_API_URL","fetchSatellites","response","fetch","method","headers","ok","Error","status","data","json","Array","isArray","err","console","message","handleNavigation","view","renderCurrentView","commonProps","onRefresh","onNavigate","fileName","_jsxFileName","lineNumber","columnNumber","className","children","satelliteCount","length","style","zIndex","role","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/MissionSkyTracker/MissionSkyTracker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport SatelliteHistory from './components/SatelliteHistory';\nimport LiveVideo from './components/LiveVideo';\n\n/**\n * Main App component for Mission Board Dashboard\n * Handles routing and global state management\n */\nfunction App() {\n    const [currentView, setCurrentView] = useState('home');\n    const [satellites, setSatellites] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // API configuration\n    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n    /**\n     * Fetch satellite data from backend API\n     */\n    const fetchSatellites = async () => {\n        setLoading(true);\n        setError(null);\n        \n        try {\n            const response = await fetch(`${API_BASE_URL}/satellites`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            \n            if (data.satellites && Array.isArray(data.satellites)) {\n                setSatellites(data.satellites);\n            } else {\n                throw new Error('Invalid data format received from server');\n            }\n            \n        } catch (err) {\n            console.error('Failed to fetch satellites:', err);\n            setError(`Failed to load satellite data: ${err.message}`);\n            setSatellites([]);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Load satellites on component mount\n    useEffect(() => {\n        fetchSatellites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    /**\n     * Handle navigation between views\n     */\n    const handleNavigation = (view) => {\n        setCurrentView(view);\n        \n        // Refresh data when navigating to dashboard or history\n        if (view === 'dashboard' || view === 'history') {\n            fetchSatellites();\n        }\n    };\n\n    /**\n     * Render current view based on navigation state\n     */\n    const renderCurrentView = () => {\n        const commonProps = {\n            satellites,\n            loading,\n            error,\n            onRefresh: fetchSatellites\n        };\n\n        switch (currentView) {\n            case 'home':\n                return <Home {...commonProps} onNavigate={handleNavigation} />;\n            case 'dashboard':\n                return <Dashboard {...commonProps} />;\n            case 'history':\n                return <SatelliteHistory {...commonProps} />;\n            case 'videos':\n                return <LiveVideo {...commonProps} />;\n            default:\n                return <Home {...commonProps} onNavigate={handleNavigation} />;\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <Navbar \n                currentView={currentView} \n                onNavigate={handleNavigation}\n                satelliteCount={satellites.length}\n            />\n            \n            <main className=\"app-main\">\n                {renderCurrentView()}\n            </main>\n            \n            {/* Global error toast */}\n            {error && (\n                <div className=\"position-fixed bottom-0 end-0 p-3\" style={{ zIndex: 1050 }}>\n                    <div className=\"toast show\" role=\"alert\">\n                        <div className=\"toast-header bg-danger text-white\">\n                            <i className=\"fas fa-exclamation-triangle me-2\"></i>\n                            <strong className=\"me-auto\">Error</strong>\n                            <button \n                                type=\"button\" \n                                className=\"btn-close btn-close-white\" \n                                onClick={() => setError(null)}\n                            ></button>\n                        </div>\n                        <div className=\"toast-body bg-dark text-white\">\n                            {error}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}